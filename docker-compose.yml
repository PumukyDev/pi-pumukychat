services:
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: app_chat
    working_dir: /var/www
    restart: unless-stopped
    depends_on:
      - database
      - node
    environment:
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: database
    volumes:
      - ./src:/var/www
    networks:
      - mysql-network
      - proxy-network

  node:
    build:
      context: .
      dockerfile: ./node/Dockerfile
    container_name: node_chat
    working_dir: /app
    volumes:
      - ./src:/app
    networks:
      - proxy-network

  queue-worker:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: queue_chat
    working_dir: /var/www
    command: php artisan queue:work
    restart: unless-stopped
    depends_on:
      - app
    environment:
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: database
    volumes:
      - ./src:/var/www
    networks:
      - mysql-network
      - proxy-network

  reverb-server:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: reverb_chat
    working_dir: /var/www
    command: php artisan reverb:start --debug
    restart: unless-stopped
    depends_on:
      - app
    environment:
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: database
    volumes:
      - ./src:/var/www
    networks:
      - mysql-network
      - proxy-network

  nginx:
    image: nginx:alpine
    container_name: nginx_chat
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./src:/var/www
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mysql-network
      - proxy-network

  database:
    image: mariadb:latest
    container_name: database_chat
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - mysql-network

  phpmyadmin:
    image: phpmyadmin:5.2
    container_name: phpmyadmin_chat
    restart: unless-stopped
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - mysql-network
    depends_on:
      - database

volumes:
  db-data:

networks:
  mysql-network:
    driver: bridge
  proxy-network:
    external: true
